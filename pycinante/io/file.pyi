from datetime import datetime
from os import PathLike
from typing import Any, AnyStr, Callable, TypeVar, Type
from typing_extensions import Self
from pycinante.io.utils import PathType, BinaryUnitProtocol

T = TypeVar("T")

class File(PathLike):
    _pathname: AnyStr
    def __init__(self, pathname: PathType) -> None: ...
    @property
    def path(self) -> AnyStr: ...
    def is_file(self) -> bool: ...
    def is_link(self) -> bool: ...
    def is_samefile(self, pathname: PathType) -> bool: ...
    def is_exists(self) -> bool: ...
    def is_not_exists(self) -> bool: ...
    def basename(self) -> str: ...
    def filename(self) -> str: ...
    def ext(self) -> str: ...
    def accessed_time(self) -> datetime: ...
    def modified_time(self) -> datetime: ...
    def size(self) -> BinaryUnitProtocol: ...
    def touch(self) -> Self: ...
    def copy_to(self, dst: PathType, **kwargs: Any) -> File: ...
    def copy_from(self, src: PathType, **kwargs: Any) -> Self: ...
    def move_to(self, dst: PathType, **kwargs: Any) -> File: ...
    def move_from(self, src: PathType, **kwargs: Any) -> File: ...
    def remove(self) -> Self: ...
    def rename(self, new_name: AnyStr) -> File: ...
    def load(self, loader: Callable[[PathType, Any], T] | None = None, **kwargs: Any) -> T: ...
    def dump(self, obj: T, dumper: Callable[[T, PathType, Any], None] | None = None, **kwargs: Any) -> None: ...
    def __fspath__(self) -> str: ...

file: Type[File]
